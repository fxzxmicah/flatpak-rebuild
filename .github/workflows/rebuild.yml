name: Build Flatpak Packages

on:
  workflow_dispatch:
  push:
    paths:
      - PATCHES/**

jobs:
  enumerate:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.enumerate.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: enumerate
        run: |
          echo "matrix=$(find PATCHES -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | jq -R . | jq -sc "{app: .}")" >> $GITHUB_OUTPUT

  build:
    needs: enumerate
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flathub-infra/flatpak-github-actions:gnome-49
      options: --privileged
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.enumerate.outputs.matrix) }}

    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4

      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          repository: flathub/${{ matrix.app }}
          path: src

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        id: importation
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Apply patches
        run: |
          for patch in PATCHES/${{ matrix.app }}/*.patch; do
            [ -f "${patch}" ] || continue
            echo "Applying ${patch}"
            git apply --directory src -p 2 "${patch}"
          done

      - name: Build flatpak
        uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          build-bundle: false
          manifest-path: src/${{ matrix.app }}.yml
          gpg-sign: ${{ steps.importation.outputs.keyid }}
          cache-key: flatpak-builder-${{ matrix.app }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}
          path: repo

      # Remove this when there are multiple apps to build
      - name: Upload artifact (Test)
        uses: actions/upload-artifact@v4
        with:
          name: com.abc.def
          path: repo

  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: sources

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y ostree flatpak

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        id: importation
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Merge repos
        run: |
          ostree init --mode=archive-z2 --repo=flatpak
          for repo in sources/*; do
            # Ensure the refs/remotes directory exists
            mkdir -p "${repo}/refs/remotes"
            ostree pull-local --repo=flatpak "${repo}"
          done

          cat > flatpak/github.flatpakrepo <<EOF
          [Flatpak Repo]
          Title=Github
          Url=https://${{ secrets.OSS_BUCKET }}.${{ secrets.END_POINT }}/flatpak
          Homepage=${{ github.server_url }}/${{ github.repository }}
          Comment=Rebuild repository for Flatpak applications
          Description=Rebuild repository for Flatpak applications
          GPGKey=$(gpg --export --armor ${{ steps.importation.outputs.keyid }} | base64 -w0)
          EOF

          flatpak build-update-repo flatpak --gpg-sign=${{ steps.importation.outputs.keyid }}

      - name: Setup utility
        uses: yizhoumo/setup-ossutil@v2
        with:
          ossutil-version: "latest"
          endpoint: ${{ secrets.END_POINT }}
          access-key-id: ${{ secrets.ACCESSKEY_ID }}
          access-key-secret: ${{ secrets.ACCESSKEY_SECRET }}

      - name: Upload to OSS
        run: |
          ossutil sync flatpak "oss://${{ secrets.OSS_BUCKET }}/flatpak" --force --delete
